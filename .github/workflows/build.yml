# This is a basic workflow to help you get started with Actions

name: build

# Controls when the action will run.
on:
  schedule:
    - cron: "0 0 1 * *" # monthly
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Matrix strategy from
    # https://github.com/msys2/MINGW-packages/blob/master/.github/workflows/main.yml
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            shell: powershell
            arch: x86_64
          - os: ubuntu-22.04
            shell: bash

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    env:
      MSYS2_DIR: C:\msys64
      EMACS_REPO: https://github.com/kiennq/emacs.git

    defaults:
      run:
        shell: ${{ matrix.shell }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # This is the shortest job, but in this case it pulls all MSYS/MINGW64
      - name: Clone Emacs
        if: runner.os == 'Windows'
        id: clone_repo_w
        run: .\emacs-build.cmd --clone --repo https://github.com/kiennq/emacs.git --depth 1

      - name: Clone Emacs
        if: runner.os != 'Windows'
        id: clone_repo_u
        run: |
          mkdir -p ./git/emacs
          cd ./git/emacs/
          git clone --depth 1 $EMACS_REPO .
          echo "::set-output name=EMACS_COMMIT::`git rev-parse --short=7 HEAD`"

      - name: Set package version
        if: runner.os == 'Windows'
        run: echo PKG_VER=29.0.${{ github.run_number }}.${{ steps.clone_repo_w.outputs.EMACS_COMMIT }} >> $env:GITHUB_ENV

      - name: Set package version
        if: runner.os != 'Windows'
        run: echo PKG_VER=29.0.${{ github.run_number }}.${{ steps.clone_repo_u.outputs.EMACS_COMMIT }} >> $GITHUB_ENV

      - name: Build and packEmacs
        if: runner.os == 'Windows'
        # Require --nativecomp and --with-* flags, else the deps will not be included properly
        run: |
          .\emacs-build.cmd --nativecomp --slim --with-rsvg --build
          .\emacs-build.cmd --nativecomp --slim --with-rsvg --pack-all

      - name: Build and pack Emacs
        if: runner.os != 'Windows'
        run: |
          cd ./git/emacs/
          cp -p ../../emacs-build-unix.sh .
          chmod 755 ./emacs-build-unix.sh
          ./emacs-build-unix.sh --version $PKG_VER
          mkdir -p ../../zips
          mv *.deb ../../zips/

      # Upload everything
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: emacs-packages
          path: zips/*
          if-no-files-found: error

    outputs:
      version: ${{ env.PKG_VER }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: emacs-packages
      - run: ls -R

      # Create release
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.build.outputs.version }}
          name: emacs_${{ needs.build.outputs.version }}
          prerelease: false
          files: |
            *-full.zip
            *.deb
